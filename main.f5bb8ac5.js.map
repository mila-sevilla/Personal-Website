{"version":3,"sources":["main.js"],"names":["slides","Array","from","document","querySelectorAll","prev_buttons","next_buttons","dots","currentSlide","nextSlide","classList","remove","length","add","prevSlide","forEach","prev_button","addEventListener","next_button","dot","index","indexOf"],"mappings":";;;AA4GA,aA5GA,QAAA,sBAKA,IAAMA,EAASC,MAAMC,KAAKC,SAASC,iBAAiB,WAC9CC,EAAeJ,MAAMC,KAAKC,SAASC,iBAAiB,8BACpDE,EAAeL,MAAMC,KAAKC,SAASC,iBAAiB,+BACpDG,EAAON,MAAMC,KAAKC,SAASC,iBAAiB,aAE9CI,EAAe,EAEbC,EAAY,WAChBT,EAAOQ,GAAcE,UAAUC,OAAO,WACtCJ,EAAKC,GAAcE,UAAUC,OAAO,cAEhCH,IAAiBR,EAAOY,OAAS,EACnCJ,EAAe,EAEfA,IAGFR,EAAOQ,GAAcE,UAAUG,IAAI,WACnCN,EAAKC,GAAcE,UAAUG,IAAI,eAG7BC,EAAY,WAChBd,EAAOQ,GAAcE,UAAUC,OAAO,WACtCJ,EAAKC,GAAcE,UAAUC,OAAO,cAEf,IAAjBH,EACFA,EAAeR,EAAOY,OAAS,EAE/BJ,IAGFR,EAAOQ,GAAcE,UAAUG,IAAI,WACnCN,EAAKC,GAAcE,UAAUG,IAAI,eAGnCR,EAAaU,QAAQ,SAAAC,GACnBA,EAAYC,iBAAiB,QAASH,KAGxCR,EAAaS,QAAQ,SAAAG,GACnBA,EAAYD,iBAAiB,QAASR,KAKxCF,EAAKQ,QACH,SAAAI,GACEA,EAAIF,iBAAiB,QAAS,WAC5BjB,EAAOQ,GAAcE,UAAUC,OAAO,WACtCJ,EAAKC,GAAcE,UAAUC,OAAO,cAE9BS,IAAAA,EAAQb,EAAKc,QAAQ,MAG3BrB,EAFAQ,EAAeY,GAEMV,UAAUG,IAAI,WACnCN,EAAKC,GAAcE,UAAUG,IAAI","file":"main.f5bb8ac5.js","sourceRoot":"src","sourcesContent":["import './styles/main.scss'\n// Portfolio Carousel\n\n//Test if necessary for IE:\n//const slides = Array.prototype.slice.call(document.querySelectorAll('.slide'));\nconst slides = Array.from(document.querySelectorAll('.slide'))\nconst prev_buttons = Array.from(document.querySelectorAll('[data-action=\\'slideLeft\\']'))\nconst next_buttons = Array.from(document.querySelectorAll('[data-action=\\'slideRight\\']'))\nconst dots = Array.from(document.querySelectorAll('.nav-dot'))\n\nlet currentSlide = 0\n\nconst nextSlide = () => {\n  slides[currentSlide].classList.remove('current')\n  dots[currentSlide].classList.remove('currentDot')\n\n  if (currentSlide === slides.length - 1) {\n    currentSlide = 0\n  } else {\n    currentSlide++\n  }\n\n  slides[currentSlide].classList.add('current')\n  dots[currentSlide].classList.add('currentDot')\n}\n\nconst prevSlide = () => {\n  slides[currentSlide].classList.remove('current')\n  dots[currentSlide].classList.remove('currentDot')\n\n  if (currentSlide === 0) {\n    currentSlide = slides.length - 1\n  } else {\n    currentSlide--\n  }\n\n  slides[currentSlide].classList.add('current')\n  dots[currentSlide].classList.add('currentDot')\n}\n\nprev_buttons.forEach(prev_button => {\n  prev_button.addEventListener('click', prevSlide)\n})\n\nnext_buttons.forEach(next_button => {\n  next_button.addEventListener('click', nextSlide)\n})\n\n//Navigation with the dots\n\ndots.forEach(\n  dot => {\n    dot.addEventListener('click', function() {\n      slides[currentSlide].classList.remove('current')\n      dots[currentSlide].classList.remove('currentDot')\n\n      const index = dots.indexOf(this)\n      currentSlide = index\n\n      slides[currentSlide].classList.add('current')\n      dots[currentSlide].classList.add('currentDot')\n    }\n    )\n  }\n) \n\n\n// Full page scroll on desktop\n// const sections = document.querySelectorAll('section');\n// // const section0Link = document.querySelector('.section0Link');\n// // const section1Link = document.querySelector('.section1Link');\n// // const section2Link = document.querySelector('.section2Link');\n// // const section3Link = document.querySelector('.section3Link');\n// const idlePeriod = 200;\n// const animationDuration = 1000;\n// let lastAnimation = 0;\n// let index = 0;\n\n// document.addEventListener('wheel', event => {\n//     var delta = event.wheelDelta;\n//     var timeNow = new Date().getTime();\n//     // Cancel scroll if currently animating or within quiet period\n//     if (timeNow - lastAnimation < idlePeriod + animationDuration) {\n//       event.preventDefault();\n//       return;\n//     }\n//     // scrolling down\n//     if (delta < 0) {\n//         if (index > 2) return;\n//         index++;\n\n//         sections.forEach((section, i) => {       \n//             if (i === index) {\n//             section.scrollIntoView({behavior: \"smooth\"});\n//             }\n//         })\n//     // scrolling up\n//     } else {\n//         if (index < 1) return;\n//         index--;\n        \n//         sections.forEach((section, i) => {\n//             if (i === index) {\n//             section.scrollIntoView({behavior: \"smooth\"});\n//             }\n//         })\n//     }  \n//     lastAnimation = timeNow;\n// })"]}