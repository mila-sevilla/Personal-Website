{"version":3,"sources":["main.js"],"names":["sections","document","querySelectorAll","section0Btn","querySelector","section1Btn","section2Btn","section3Btn","idlePeriod","animationDuration","lastAnimation","index","entry_animation","toggleText","i","state","length","classList","add","remove","addEventListener","scrollIntoView","behavior"],"mappings":";;;AAmGA,aAnGA,QAAA,eAEA,IAAMA,EAAWC,SAASC,iBAAiB,WACrCC,EAAcF,SAASG,cAAc,gBACrCC,EAAcJ,SAASG,cAAc,gBACrCE,EAAcL,SAASG,cAAc,gBACrCG,EAAcN,SAASG,cAAc,gBAErCI,EAAa,IACbC,EAAoB,IAEtBC,EAAgB,EAChBC,EAAQ,EAERC,EAAkBZ,EAAS,GAAGE,iBAAiB,oBAE7CW,EAAa,SAACC,EAAGC,GACfA,GAAU,SAAVA,EACK,IAAID,EAAI,EAAGA,EAAIF,EAAgBI,OAAQF,IACxCF,EAAgBE,GAAGG,UAAUC,IAAI,aAGrCN,EAAgBE,GAAGG,UAAUE,OAAO,SAI5CN,EAAW,EAAG,QAsCdV,EAAYiB,iBAAiB,QAAS,WAElCpB,EADAW,EAAQ,GACQU,eAAe,CAACC,SAAU,WAC1CT,EAAWF,EAAO,UAGtBN,EAAYe,iBAAiB,QAAS,WAElCpB,EADAW,EAAQ,GACQU,eAAe,CAACC,SAAU,aAI9ChB,EAAYc,iBAAiB,QAAS,WAElCpB,EADAW,EAAQ,GACQU,eAAe,CAACC,SAAU,aAI9Cf,EAAYa,iBAAiB,QAAS,WAElCpB,EADAW,EAAQ,GACQU,eAAe,CAACC,SAAU","file":"main.cffc2bd0.js","sourceRoot":"../src","sourcesContent":["import \"./main.scss\";\n\nconst sections = document.querySelectorAll('section');\nconst section0Btn = document.querySelector('.section0Btn');\nconst section1Btn = document.querySelector('.section1Btn');\nconst section2Btn = document.querySelector('.section2Btn');\nconst section3Btn = document.querySelector('.section3Btn');\n\nconst idlePeriod = 200;\nconst animationDuration = 1000;\n\nlet lastAnimation = 0;\nlet index = 0;\n\nvar entry_animation = sections[0].querySelectorAll('.entry_animation');\n\nconst toggleText = (i, state) => {\n    if (state === 'show') {\n        for (var i = 0; i < entry_animation.length; i++) { \n            entry_animation[i].classList.add('show'); \n        } \n    } else {\n        entry_animation[i].classList.remove('show');  \n    } \n}\n\ntoggleText(0, 'show');\n\n// document.addEventListener('wheel', event => {\n//     var delta = event.wheelDelta;\n//     var timeNow = new Date().getTime();\n//     // Cancel scroll if currently animating or within quiet period\n//     if (timeNow - lastAnimation < idlePeriod + animationDuration) {\n//       event.preventDefault();\n//       return;\n//     }\n//     // scrolling down\n//     if (delta < 0) {\n//         if (index > 2) return;\n//         toggleText(index, 'hide');\n//         index++;\n\n//         sections.forEach((section, i) => {       \n//             if (i === index) {\n//             toggleText(i, 'show');\n//             section.scrollIntoView({behavior: \"smooth\"});\n//             }\n//         })\n//     // scrolling up\n//     } else {\n//         if (index < 1) return;\n//         toggleText(index, 'hide');\n//         index--;\n        \n//         sections.forEach((section, i) => {\n//             if (i === index) {\n//             toggleText(i, 'show');\n//             section.scrollIntoView({behavior: \"smooth\"});\n//             }\n//         })\n//     }  \n//     lastAnimation = timeNow;\n// })\n\nsection0Btn.addEventListener('click', () => {\n    index = 0;\n    sections[index].scrollIntoView({behavior: 'smooth'});\n    toggleText(index, 'show');\n})\n\nsection1Btn.addEventListener('click', () => {\n    index = 1;\n    sections[index].scrollIntoView({behavior: 'smooth'});\n    //toggleText(index, 'show');\n})\n\nsection2Btn.addEventListener('click', () => {\n    index = 2;\n    sections[index].scrollIntoView({behavior: 'smooth'});\n    //toggleText(index, 'show');\n})\n\nsection3Btn.addEventListener('click', () => {\n    index = 3;\n    sections[index].scrollIntoView({behavior: 'smooth'});\n    //toggleText(index, 'show');\n})\n\n\n\n// SOLUTION WITH LOOP\n\n//section1Btn.addEventListener('click', () => {\n//     index = 1;\n//     sections.forEach((section, i) => {\n//         if (i === index) {\n//             section.scrollIntoView({behavior: 'smooth'});\n//         }\n//     })\n// });"]}