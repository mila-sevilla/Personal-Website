{"version":3,"sources":["main.js"],"names":["slides","Array","from","document","querySelectorAll","prev","querySelector","next","dots","currentSlide","nextSlide","classList","remove","length","add","prevSlide","addEventListener","forEach","dot","index","indexOf"],"mappings":";;;AA2JA,aA3JA,QAAA,sBAOA,IAAMA,EAASC,MAAMC,KAAKC,SAASC,iBAAiB,WAC9CC,EAAOF,SAASG,cAAc,6BAC9BC,EAAOJ,SAASG,cAAc,8BAC9BE,EAAOP,MAAMC,KAAKC,SAASC,iBAAiB,aAE9CK,EAAe,EAEbC,EAAY,WACdV,EAAOS,GAAcE,UAAUC,OAAO,WACtCJ,EAAKC,GAAcE,UAAUC,OAAO,cAEhCH,IAAiBT,EAAOa,OAAS,EACjCJ,EAAe,EAEfA,IAGJT,EAAOS,GAAcE,UAAUG,IAAI,WACnCN,EAAKC,GAAcE,UAAUG,IAAI,eAG/BC,EAAY,WACdf,EAAOS,GAAcE,UAAUC,OAAO,WACtCJ,EAAKC,GAAcE,UAAUC,OAAO,cAEf,IAAjBH,EACAA,EAAeT,EAAOa,OAAS,EAE/BJ,IAGJT,EAAOS,GAAcE,UAAUG,IAAI,WACnCN,EAAKC,GAAcE,UAAUG,IAAI,eAGrCP,EAAKS,iBAAiB,QAASN,GAC/BL,EAAKW,iBAAiB,QAASD,GAG/BP,EAAKS,QACD,SAACC,GACGA,EAAIF,iBAAiB,QAAS,WAC1BhB,EAAOS,GAAcE,UAAUC,OAAO,WACtCJ,EAAKC,GAAcE,UAAUC,OAAO,cAE9BO,IAAAA,EAAQX,EAAKY,QAAQ,MAG3BpB,EAFAS,EAAeU,GAEMR,UAAUG,IAAI,WACnCN,EAAKC,GAAcE,UAAUG,IAAI","file":"main.8d6a14e4.js","sourceRoot":"src","sourcesContent":["import \"./styles/main.scss\";\n\n// Portfolio Carousel\n\n//For IE:\n//const slides = Array.prototype.slice.call(document.querySelectorAll('.slide'));\n//Or try arrayFrom and then build\nconst slides = Array.from(document.querySelectorAll('.slide'))\nconst prev = document.querySelector(\"[data-action='slideLeft']\")\nconst next = document.querySelector(\"[data-action='slideRight']\")\nconst dots = Array.from(document.querySelectorAll('.nav-dot'))\n\nlet currentSlide = 0\n\nconst nextSlide = () => {\n    slides[currentSlide].classList.remove('current')\n    dots[currentSlide].classList.remove('currentDot')\n\n    if (currentSlide === slides.length - 1) {\n        currentSlide = 0\n    } else {\n        currentSlide++\n    }\n\n    slides[currentSlide].classList.add('current')\n    dots[currentSlide].classList.add('currentDot')\n}\n\nconst prevSlide = () => {\n    slides[currentSlide].classList.remove('current')\n    dots[currentSlide].classList.remove('currentDot')\n\n    if (currentSlide === 0) {\n        currentSlide = slides.length - 1\n    } else {\n        currentSlide--\n    }\n\n    slides[currentSlide].classList.add('current')\n    dots[currentSlide].classList.add('currentDot')\n}\n\nnext.addEventListener('click', nextSlide)\nprev.addEventListener('click', prevSlide)\n\n\ndots.forEach(\n    (dot) => {\n        dot.addEventListener('click', function() {\n            slides[currentSlide].classList.remove('current')\n            dots[currentSlide].classList.remove('currentDot')\n\n            const index = dots.indexOf(this)\n            currentSlide = index\n\n            slides[currentSlide].classList.add('current')\n            dots[currentSlide].classList.add('currentDot')\n            }\n        )\n    }\n) \n\n// dots[0,1,2]  slides[0,1,2]\n\n// const navDots = () => {\n//     slides[currentSlide].classList.remove('current')\n//     dots[currentSlide].classList.remove('currentDot')\n\n//     if (slides[currentSlide] !== currentSlide) \n// }\n\n// dots[0].addEventListener(\"click\", function(){  })\n// dots[1].addEventListener(\"click\", function(){ currentSlide = 1 })\n\n\n\n// Full page scroll on desktop\n// const sections = document.querySelectorAll('section');\n// // const section0Link = document.querySelector('.section0Link');\n// // const section1Link = document.querySelector('.section1Link');\n// // const section2Link = document.querySelector('.section2Link');\n// // const section3Link = document.querySelector('.section3Link');\n// const idlePeriod = 200;\n// const animationDuration = 1000;\n// let lastAnimation = 0;\n// let index = 0;\n\n\n\n// //Full page scroll on desktop with mouse wheel\n\n// document.addEventListener('wheel', event => {\n//     var delta = event.wheelDelta;\n//     var timeNow = new Date().getTime();\n//     // Cancel scroll if currently animating or within quiet period\n//     if (timeNow - lastAnimation < idlePeriod + animationDuration) {\n//       event.preventDefault();\n//       return;\n//     }\n//     // scrolling down\n//     if (delta < 0) {\n//         if (index > 2) return;\n//         index++;\n\n//         sections.forEach((section, i) => {       \n//             if (i === index) {\n//             section.scrollIntoView({behavior: \"smooth\"});\n//             }\n//         })\n//     // scrolling up\n//     } else {\n//         if (index < 1) return;\n//         index--;\n        \n//         sections.forEach((section, i) => {\n//             if (i === index) {\n//             section.scrollIntoView({behavior: \"smooth\"});\n//             }\n//         })\n//     }  \n//     lastAnimation = timeNow;\n// })\n\n// Portfolio Carousel\n\n\n\n// Navigational Progress Dots\n\n// const updateDot = () => {\n//   if()\n// }\n\n// _updateCurrentSlideDot : function () {\n//   // update dots\n//   var dots = this.obj.querySelectorAll(\".carousel-dot\");\n//   for(var i = 0; i < dots.length; i++){\n//     if(i == this.slide_index){\n//       dots[this.slide_index].className += \" active\";\n//     } else {\n//       dots[i].className = dots[i].className.replace(/(^| )active/,\"\");\n//     }\n//   }\n\n// },\n\n// index = 0;\n\n// nav_dots.forEach() {\n//   if(slides.classList.contains('current')) {\n//     nav_dots.classList.add('active')\n//   } else {\n//     nav_dots.classList.remove('active')\n//   }\n\n// }\n\n\n"]}